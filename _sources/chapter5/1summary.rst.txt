本项目工作总结
================================================

本项目的主要工作是在 VSCode 编辑器的已有的用于跟踪用户态程序的 debugger 插件基础上，扩展对 Rust 语言和操作系统内核特征的源代码级跟踪分析能力。实现的功能主要包括：

1.	关键的寄存器和内存的数据获取；
2.	内核态与用户态方便的切换跟踪
3.	当前特权级信息的准确获取；
4.	自动更换符号表文件；
5.	支持基于 eBPF 的单步断点、内存查看、寄存器查看功能
6.	对被跟踪内核运行环境的适配：QEMU

通过结合使用 eBPF Server 和 gdbserver，我们构建了一个高效、灵活且功能强大的操作系统调试跟踪平台。目前，已经有一些同学正在通过本项目的调试工具来学习操作系统知识。
